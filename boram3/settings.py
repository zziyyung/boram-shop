"""
Django settings for boram3 project.

Generated by 'django-admin startproject' using Django 4.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import django
from django.utils.encoding import force_str
django.utils.encoding.force_text = force_str

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-a^9rt_+$!v68v_qyg+%*#1-zgjll4qi76ar#tw!ijd%id5l-@+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'boram3',
    'customer.apps.CustomerConfig',
    'info.apps.InfoConfig',
    'login.apps.LoginConfig',
    'mypage.apps.MypageConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

ELASTICSEARCH_DSL = {
    'default': {
        'host': '34.64.181.43:9200'  # 박지영 gcp
    },
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'boram3.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR/'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'boram3.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'novelmusic',  # 데이터베이스의 이름
        'USER': 'jiyoung',
        'PASSWORD': 'votmdnjem',
        'HOST': '35.77.242.184',  # 박지영 gcp mysql 외부 연동 (외부IP)
        'PORT': '3306'
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR/'static']

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# logstash 연결 1
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,                  # 기존의 루트가 아닌 로거를 비활성화할지 여부.
'handlers': {                                           # handlers : 로그 레코드로 무슨 작업을 할 것인지 정의
        'logstash': {
            'level': 'DEBUG',
            'class': 'logstash.TCPLogstashHandler',
            'host': '34.64.181.43',
            'port': 9900,                               # Default value: 5959
            'version': 1,                               # version of logstash event schema . default value:0
            'message_type': 'django',                   #' type' field in logstash message. default value : 'logstash'
            'fqdn': False ,                             # fully qualified domain name . default value : false #
            'tags': ['django.request'],                 # list of tags . default : None
        },
    },
    'loggers': {                                        # loggers : 처리해야 할 로그 레코드를 어떤 handler로 전달할지 정의
        'django.requests':{
            'handlers':['logstash'],                    # 로그 레코드를 logstash handler로 전달
            'level': 'DEBUG',
        },
        'django.server':{
            'handlers':['logstash'],                    # 로그 레코드를 logstash handler로 전달
            'level': 'DEBUG',
        },
        'book': {                                       # 검색어 저장하는 로거
            'handlers': ['logstash'],
            'level': 'DEBUG',
        },
        'visitor' : {
            'handlers': ['logstash'],
            'level': 'DEBUG',
        },
    },
}